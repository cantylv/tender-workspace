version: "3.0"

services:
  # nginx:
  #   image: nginx:1.27.1
  #   restart: always
  #   container_name: nginx
  #   env_file: .env
  #   volumes:
  #     - ./services/nginx/logs:/var/log/nginx
  #     - ./services/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #   ports:
  #     - ${NGINX_PORT}:${NGINX_PORT}
  #   networks:
  #     - ecosystem
  #   depends_on:
  #     - tender-platform
  #   tty: true
  tender-platform:
    build:
      context: ./
      dockerfile: Dockerfile
    restart: always
    container_name: tender-platform
    env_file: .env
    ports: 
      - ${SERVER_PORT}:${SERVER_PORT}
    networks:
      - ecosystem
    depends_on: 
      - postgres
      # - mongodb
      # - memcached
      # - kafka 
  postgres:
    image: postgres:16.3
    restart: always
    container_name: postgres
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE}
    volumes:
      - ./services/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
      - ./services/postgres/data:/var/lib/postgresql/data
    expose:
      - ${POSTGRES_PORT}
    networks:
      - ecosystem
  pgamdin:
    image: dpage/pgadmin4:latest
    restart: always
    container_name: pgamdin
    env_file: .env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 82:80
    networks:
      - ecosystem
  # mongodb:
  #   image: mongo:4.4
  #   restart: always
  #   container_name: mongodb
  #   env_file: .env
  #   expose:
  #     - ${MONGODB_PORT}
  #   networks:
  #     - ecosystem
  # memcached:
  #   image: memcached:1.6
  #   restart: always
  #   container_name: memcached
  #   env_file: .env
  #   expose:
  #     - ${MEMCACHED_PORT}
  #   networks:
  #     - ecosystem
  #   command: memcached -m 64
  # kafka:
  #   image: docker.io/bitnami/kafka:3.8
  #   restart: always
  #   container_name: kafka
  #   environment:
  #     # KRaft settings
  #     - KAFKA_CFG_NODE_ID=0
  #     - KAFKA_CFG_PROCESS_ROLES=controller,broker
  #     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
  #     # Listeners
  #     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
  #     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
  #     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
  #     - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  #     - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
  #   ports:
  #     - ${KAFKA_PORT}
  #   networks:
  #     - ecosystem
  #   volumes:
  #     - ./services/kafka/data:/bitnami/kafka

networks:
  ecosystem:
    driver: bridge